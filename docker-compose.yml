version: "3"
services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: adidas
    volumes:
        - ./scripts/initMongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
        - 27017:27017
        - 27018:27018

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "subscription:1:1"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  subscription:
    image: adi/subscription
    ports:
      - 3000:3000
      - 3001:3001
    depends_on:
      - mongo
      - kafka
    environment:
      DB_HOST: mongo
      HOST: '0.0.0.0'
      BROKERS: kafka:9092

  email:
    image: adi/email
    depends_on:
      - kafka
    environment:
      BROKERS: kafka:9092

  public:
    image: adi/public
    depends_on:
      - subscription
    ports:
      - 4005:4005
      - 4006:4006
    environment:
      SUBSCRIPTION_SERVER_URL: http://subscription:3000
      HOST: '0.0.0.0'
